//Semestre 2019 - 2
//************************************************************//
/*

FI UNAM
Guzman Esquivel Raul
Grupo 02
Version visual studio 2017
Practica 2

*/

#include "Main.h"
void InitGL ( GLvoid )     // Inicializamos parametros
{
	//glShadeModel(GL_FLAT);							// Habilitamos Smooth Shading
	glClearColor(0.0f, 0.0f, 0.0f, 0.0f);				// Negro de fondo
	//glClearDepth(1.0f);									// Configuramos Depth Buffer
	//glEnable(GL_DEPTH_TEST);							// Habilitamos Depth Testing
	//glDepthFunc(GL_LEQUAL);								// Tipo de Depth Testing a realizar
	
	
}

void display ( void )   // Creamos la funcion donde se dibuja
{
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);	// Limiamos pantalla y Depth Buffer	
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();									// Reinicializamos la actual matriz Modelview

	//Poner aqui codigo ha dibujar
	//c
	glBegin(GL_LINE_LOOP);
	glColor3f(0,0,1);
	
	glVertex3f(2,2.5,1);
	glVertex3f(2,4,1);
	glVertex3f(4,4,1);
	glVertex3f(4,3.5,1);
	glVertex3f(2.5,3.5,1);
	glVertex3f(2.5,2.5,1);
	glEnd();

	glBegin(GL_LINE_LOOP);
	glColor3f(1, 0, 0);

	glVertex3f(2,2.5,1);
	glVertex3f(2,1,1);
	glVertex3f(4,1,1);
	glVertex3f(4,1.5,1);
	glVertex3f(2.5,1.5,1);
	glVertex3f(2.5, 2.5, 1);
	glEnd();
	//G
	glBegin(GL_LINE_LOOP);
	glColor3f(0, 1, 1);

	glVertex3f(5,2.5,1);
	glVertex3f(5,1,1);
	glVertex3f(7,1,1);
	glVertex3f(7,2.5,1);
	glVertex3f(6,2.5,1);
	glVertex3f(6,2,1);
	glVertex3f(6.5,2,1);
	glVertex3f(6.5,1.5,1);
	glVertex3f(5.5,1.5,1);
	glVertex3f(5.5,2.5,1);
	glEnd();

	glBegin(GL_LINE_LOOP);
	glColor3f(1, 1, 1);

	glVertex3f(5, 2.5, 1);
	glVertex3f(5, 4, 1);
	glVertex3f(7, 4, 1);
	glVertex3f(7, 3.5, 1);
	glVertex3f(5.5, 3.5, 1);
	glVertex3f(5.5, 2.5, 1);
	glEnd();
	//R
	glBegin(GL_POLYGON);
	glColor3f(.5,1,.5);

	glVertex3f(8,2.5,1);
	glVertex3f(8,4,1);
	glVertex3f(10,4,1);
	glVertex3f(10,2.5,1);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(.8, .5, .5);

	glVertex3f(8,1 , 1);
	glVertex3f(8.5,1, 1);
	glVertex3f(8.5,2.5, 1);
	glVertex3f(8,2.5, 1);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(.8, .5, .5);
	glVertex3f(9,1, 1);
	glVertex3f(10,1, 1);
	glVertex3f(9,2.5, 1);
	glVertex3f(8.5, 2.5, 1);
	glEnd();
	//
	//G
	
		glBegin(GL_QUADS);
	glColor3f(1, .5, .5);

	glVertex3f(11, 2.5, 1);
	glVertex3f(11.5, 2.5, 1);
	glVertex3f(11.5,4, 1);
	glVertex3f(11,4, 1);

	glVertex3f(13,3.5,1);
	glVertex3f(13,4,1);
	glVertex3f(11, 4, 1);
	glVertex3f(11, 3.5, 1);

	glColor3f(.3,.2,.6);
	glVertex3f(11,1,1);
	glVertex3f(11.5,1,1);
	glVertex3f(11.5, 2.5, 1);
	glVertex3f(11, 2.5, 1);
	
	glVertex3f(11,1,1);
	glVertex3f(13,1,1);
	glVertex3f(13,1.5,1);
	glVertex3f(11,1.5,1);

	glVertex3f(12.5,1.5,1);
	glVertex3f(13,1.5,1);
	glVertex3f(13,2.5,1);
	glVertex3f(12.5,2.5,1);

	glVertex3f(12,2,1);
	glVertex3f(12.5,2,1);
	glVertex3f(12.5,2.5,1);
	glVertex3f(12,2.5,1);


	glEnd();

	//
	glFlush();
}

void reshape ( int width , int height )   // Creamos funcion Reshape
{
	if (height==0)										// Prevenir division entre cero
	{
		height=1;
	}

	glViewport(0,0,width,height);

	glMatrixMode(GL_PROJECTION);						// Seleccionamos Projection Matrix
	glLoadIdentity();

	// Ortogonal
	glOrtho(-10,15,-10,10,-10,10);

	glMatrixMode(GL_MODELVIEW);							// Seleccionamos Modelview Matrix
	glLoadIdentity();									
}

// Termina la ejecucion del programa cuando se presiona ESC
void keyboard(unsigned char key, int x, int y)
{
	 switch (key) 
	 {
		case 27: exit(0);
				 break;
	 }
	  glutPostRedisplay();
}    

int main ( int argc, char** argv )   // Main Function
{
  glutInit            (&argc, argv); // Inicializamos OpenGL
  glutInitDisplayMode (GLUT_RGBA | GLUT_SINGLE); // Display Mode (Clores RGB y alpha | Buffer Sencillo )
  glutInitWindowSize  (500, 500);	// Tama�o de la Ventana
  glutInitWindowPosition (0, 0);	//Posicion de la Ventana
  glutCreateWindow    ("Practica 2 RGE"); // Nombre de la Ventana
  InitGL ();						// Parametros iniciales de la aplicacion
  glutDisplayFunc     ( display );  //Indicamos a Glut funci�n de dibujo
  glutReshapeFunc     ( reshape );	//Indicamos a Glut funci�n en caso de cambio de tamano
  glutKeyboardFunc	  (keyboard);	//Indicamos a Glut funci�n de manejo de teclado
  glutMainLoop        ( );          // 

  return 0;
}


